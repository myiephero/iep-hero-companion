import{a,j as e,P as r}from"./chunk-DsWtD-um.js";import{r as s}from"./chunk--CdJ9rTh.js";import{c as n}from"../assets/index-4xq_U8Za.js";var o="Progress",l=100,[t,u]=a(o),[i,d]=t(o),m=s.forwardRef((a,s)=>{const{__scopeProgress:n,value:o=null,max:t,getValueLabel:u=p,...d}=a;!t&&0!==t||g(t)||console.error(`Invalid prop \`max\` of value \`${`${t}`}\` supplied to \`${"Progress"}\`. Only numbers greater than 0 are valid max values. Defaulting to \`100\`.`);const m=g(t)?t:l;null===o||h(o,m)||console.error(function(a,e){return`Invalid prop \`value\` of value \`${a}\` supplied to \`${e}\`. The \`value\` prop must be:\n  - a positive number\n  - less than the value passed to \`max\` (or 100 if no \`max\` prop is set)\n  - \`null\` or \`undefined\` if the progress is indeterminate.\n\nDefaulting to \`null\`.`}(`${o}`,"Progress"));const f=h(o,m)?o:null,v=x(f)?u(f,m):void 0;return e.jsx(i,{scope:n,value:f,max:m,children:e.jsx(r.div,{"aria-valuemax":m,"aria-valuemin":0,"aria-valuenow":x(f)?f:void 0,"aria-valuetext":v,role:"progressbar","data-state":c(f,m),"data-value":f??void 0,"data-max":m,...d,ref:s})})});m.displayName=o;var f="ProgressIndicator",v=s.forwardRef((a,s)=>{const{__scopeProgress:n,...o}=a,l=d(f,n);return e.jsx(r.div,{"data-state":c(l.value,l.max),"data-value":l.value??void 0,"data-max":l.max,...o,ref:s})});function p(a,e){return`${Math.round(a/e*100)}%`}function c(a,e){return null==a?"indeterminate":a===e?"complete":"loading"}function x(a){return"number"==typeof a}function g(a){return x(a)&&!isNaN(a)&&a>0}function h(a,e){return x(a)&&!isNaN(a)&&a<=e&&a>=0}v.displayName=f;var N=m,j=v;const y=s.forwardRef(({className:a,value:r,...s},o)=>e.jsx(N,{ref:o,className:n("relative h-4 w-full overflow-hidden rounded-full bg-secondary",a),...s,children:e.jsx(j,{className:"h-full w-full flex-1 bg-primary transition-all",style:{transform:`translateX(-${100-(r||0)}%)`}})}));y.displayName=N.displayName;export{y as P};
